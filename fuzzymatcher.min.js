(function(){var root=this;var previousFuzzymatcher=root.fuzzymatcher;var lists={};var extend=function extend(){for(var i=1;i<arguments.length;i++)for(var key in arguments[i])if(arguments[i].hasOwnProperty(key))arguments[0][key]=arguments[i][key];return arguments[0]};function Fuzzymatch(options){defaultOptions={Match_Threshold:.3,Match_Distance:10,Match_MaxBits:32};if(typeof options=="object"){options=extend(defaultOptions,options)}else{options=defaultOptions}this.options=options}Fuzzymatch.prototype._match_main=function(text,pattern,loc){if(text===null||pattern===null||loc===null){throw new Error("Null input. (_match_main)")}loc=Math.max(0,Math.min(loc,text.length));if(text==pattern){return 0}else if(!text.length){return-1}else if(text.substring(loc,loc+pattern.length)==pattern){return loc}else{return this._match_bitap_(text,pattern,loc)}};Fuzzymatch.prototype._match_bitap_=function(text,pattern,loc){if(pattern.length>this.options.Match_MaxBits){throw new Error("Pattern too long for this browser.")}var s=this._match_alphabet_(pattern);var dmp=this;function match_bitapScore_(e,x){var accuracy=e/pattern.length;var proximity=Math.abs(loc-x);if(!dmp.options.Match_Distance){return proximity?1:accuracy}return accuracy+proximity/dmp.options.Match_Distance}var score_threshold=this.options.Match_Threshold;var best_loc=text.indexOf(pattern,loc);if(best_loc!=-1){score_threshold=Math.min(match_bitapScore_(0,best_loc),score_threshold);best_loc=text.lastIndexOf(pattern,loc+pattern.length);if(best_loc!=-1){score_threshold=Math.min(match_bitapScore_(0,best_loc),score_threshold)}}var matchmask=1<<pattern.length-1;best_loc=-1;var bin_min,bin_mid;var bin_max=pattern.length+text.length;var last_rd;for(var d=0;d<pattern.length;d++){bin_min=0;bin_mid=bin_max;while(bin_min<bin_mid){if(match_bitapScore_(d,loc+bin_mid)<=score_threshold){bin_min=bin_mid}else{bin_max=bin_mid}bin_mid=Math.floor((bin_max-bin_min)/2+bin_min)}bin_max=bin_mid;var start=Math.max(1,loc-bin_mid+1);var finish=Math.min(loc+bin_mid,text.length)+pattern.length;var rd=Array(finish+2);rd[finish+1]=(1<<d)-1;for(var j=finish;j>=start;j--){var charMatch=s[text.charAt(j-1)];if(d===0){rd[j]=(rd[j+1]<<1|1)&charMatch}else{rd[j]=(rd[j+1]<<1|1)&charMatch|((last_rd[j+1]|last_rd[j])<<1|1)|last_rd[j+1]}if(rd[j]&matchmask){var score=match_bitapScore_(d,j-1);if(score<=score_threshold){score_threshold=score;best_loc=j-1;if(best_loc>loc){start=Math.max(1,2*loc-best_loc)}else{break}}}}if(match_bitapScore_(d+1,loc)>score_threshold){break}last_rd=rd}return best_loc};Fuzzymatch.prototype._match_alphabet_=function(pattern){var s={};for(var i=0;i<pattern.length;i++){s[pattern.charAt(i)]=0}for(var i=0;i<pattern.length;i++){s[pattern.charAt(i)]|=1<<pattern.length-i-1}return s};Fuzzymatch.prototype.levenshtein=function levenshtein(str1,str2){if(!str1||!str2){return false}str=str1.toLowerCase().replace(/[^a-z]/g,"");t=str2.toLowerCase().replace(/[^a-z]/g,"");var i;var j;var cost;var d=new Array;if(str.length===0){return str.length}if(t.length===0){return str2.length}for(i=0;i<=t.length;i++){d[i]=new Array;d[i][0]=i}for(j=0;j<=str.length;j++){d[0][j]=j}for(i=1;i<=t.length;i++){for(j=1;j<=str.length;j++){if(t.toLowerCase().charAt(i-1)==str.toLowerCase().charAt(j-1)){cost=0}else{cost=1}d[i][j]=Math.min(d[i-1][j]+1,d[i][j-1]+1,d[i-1][j-1]+cost)}}return d[t.length][str.length]};Fuzzymatch.prototype.memoize=memoize=function memoize(fn,invalidate){cache={};return function(){var args=Array.prototype.slice.call(arguments),hash="",i=args.length;currentArg=null;while(i--){currentArg=args[i];hash+=currentArg===Object(currentArg)?JSON.stringify(currentArg):currentArg}return hash in cache?cache[hash]:cache[hash]=fn.apply(this,args)}};Fuzzymatch.prototype._query=function(listName,query){self=this;data=lists[listName].data;var l=data.length;var num_matchs=0;var matches=[];console.log(self);for(var i=0;i<l;i++){var position=self._match_main(data[i].name.toLowerCase(),query,0);if(position!==-1){num_matchs+=1;var datum=JSON.parse(JSON.stringify(data[i]));var distance=self.levenshtein(datum.name,query);var score=distance+position;var highlighted="";dnl=datum.name.length;ql=query.length;for(var di=0;di<dnl;di++){var w=datum.name.charAt(di);for(var qi=0;qi<ql;qi++){if(datum.name.charAt(di).toLowerCase()===query.charAt(qi).toLowerCase()){w="<strong>"+w+"</strong>";break}}highlighted+=w}datum.highlighted=highlighted;datum.match_score=score;matches.push(datum)}if(num_matchs>100){break}}matches.sort(function(a,b){return a.match_score-b.match_score});return matches};Fuzzymatch.prototype.addList=function(listName,data){self=this;console.log(self);if(lists[listName]){delete lists[listName]}if(listName==="all"){return false}lists[listName]={name:listName,memoized:memoize(self._query).bind(this),data:data};return true};Fuzzymatch.prototype.query=function(listNames,query){if(!query){return false}if(listNames==="all"){var keys=[];for(var key in lists)if(hasOwnProperty.call(lists,key))keys[keys.length]=key;listNames=keys}if(typeof listNames==="string"){listNames=[listNames]}var l=listNames.length;for(var i=0;i<l;i++){if(typeof lists[listNames[i]]==="undefined")return false}matches=[];for(var i=0;i<l;i++){matches=matches.concat(lists[listNames[i]].memoized(listNames[i],query))}if(listNames.length>1){matches.sort(function(a,b){return a.match_score-b.match_score})}return matches};Fuzzymatch.prototype.htmlQuery=function(listName,query,count){if(typeof lists[listName]==="undefined")return false;var matches=this.query(listName,query);var str="";if(matches.length>0){matches=matches.slice(0,count);if(matches.length<count){count=matches.length}for(var i=0;i<count;i++){str+="<li>"+matches[i].highlighted+"</li>"}var div=document.createElement("div");div.innerHTML=str;var fragment=document.createDocumentFragment();while(div.firstChild){fragment.appendChild(div.firstChild)}return fragment}};window.fuzzymatcher=new Fuzzymatch;window.Fuzzymatch=Fuzzymatch})();